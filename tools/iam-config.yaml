---
# IAM policies define what can be done by an instance to an S3 bucket
# These polcies can be included into roles (below)
inline_policies:
  archive_write_pol: >
    {
      "Statement": [
          {
              "Effect": "Allow",
              "Action": [
                  "s3:ListBucket",
                  "s3:CreateBucket",
                  "s3:PutBucketPolicy",
                  "s3:PutLifecycleConfiguration"
              ],
              "Resource": [
                  "arn:aws:s3:::srl-{{ env }}-archive"
              ]
          },
          {
              "Effect": "Allow",
              "Action": [
                  "s3:GetObject",
                  "s3:PutObject"
              ],
              "Resource": [
                  "arn:aws:s3:::srl-{{ env }}-archive/*"
              ]
          }
      ]
    }
  yum_read_pol: >
    {
      "Statement": [
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-3p-yum-repo*"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:GetObject"],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-3p-yum-repo/*"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-yum-repo*"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:GetObject"],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-yum-repo/*"]
        }
      ]
    }
  yum_write_pol: >
    {
      "Statement": [
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-3p-yum-repo*"]
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:PutObject",
            "s3:DeleteObject"
           ],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-3p-yum-repo/*"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-yum-repo*"]
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:PutObject",
            "s3:DeleteObject"
           ],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-yum-repo/*"]
        }
      ]
    }
  gluster_ssl_read_pol: >
    {
      "Statement": [
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-gluster-ssl"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:GetObject"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-gluster-ssl/*"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-3p-yum-repo*"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:GetObject"],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-3p-yum-repo/*"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-yum-repo*"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:GetObject"],
          "Resource": ["arn:aws:s3:::smarter-{{ env }}-yum-repo/*"]
        }
      ]
    }
  tsb_ssl_read_pol: >
    {
      "Statement": [
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-tsb-ssl"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:GetObject"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-tsb-ssl/*"]
        }
      ]
    }
  extract_ssl_read_pol: >
    {
      "Statement": [
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-extract-ssl"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:GetObject"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-extract-ssl/*"]
        }
      ]
    }
  gluster_ssl_write_pol: >
    {
      "Statement": [
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-gluster-ssl"]
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:PutObject",
            "s3:DeleteObject"
           ],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-gluster-ssl/*"]
        }
      ]
    }
  apache_ssl_read_pol: >
    {
      "Statement": [
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-apache-internal-ssl"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:GetObject"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-apache-internal-ssl/*"]
        }
      ]
    }
  apache_ssl_write_pol: >
    {
      "Statement": [
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-apache-internal-ssl"]
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:PutObject",
            "s3:DeleteObject"
           ],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-apache-internal-ssl/*"]
        }
      ]
    }
  sensu_ssl_read_pol: >
    {
      "Statement": [
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-sensu-ssl"]
        },
        {
          "Effect": "Allow",
          "Action": ["s3:GetObject"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-sensu-ssl/*"]
        }
      ]
    }
  sensu_ssl_write_pol: >
    {
      "Statement": [
        {
          "Effect": "Allow",
          "Action": ["s3:ListBucket"],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-sensu-ssl"]
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:PutObject",
            "s3:DeleteObject"
           ],
          "Resource": ["arn:aws:s3:::srl-{{ env }}-sensu-ssl/*"]
        }
      ]
    }
  edware-inventory_pol: >
    {
     "Version": "2012-10-17",
     "Statement": [
        {
         "Action": [
           "autoscaling:Describe*",
           "ec2:Describe*",
           "elasticache:Describe*",
           "elasticloadbalancing:Describe*",
           "rds:Describe*",
           "rds:ListTagsForResource",
           "s3:Get*",
           "s3:List*"
         ],
         "Effect": "Allow",
         "Resource": "*"
       }
     ]
    }

  # The following has a dynamic build up of the PassRole statement in update-iam.py
  edware-spinup_pol: >
    {
     "Statement": [
        {
            "Action": [
                "ec2:AssociateAddress",
                "ec2:AttachVolume",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DeleteTags",
                "ec2:DeleteVolume",
                "ec2:DisassociateAddress",
                "ec2:ModifyInstanceAttribute",
                "ec2:MonitorInstances",
                "ec2:RebootInstances",
                "ec2:RunInstances",
                "ec2:StartInstances",
                "ec2:StopInstances",
                "ec2:TerminateInstances",
                "ec2:UnmonitorInstances"
            ],
            "Effect": "Allow",
            "Resource": "*"
        },
        {
            "Action": [
                "iam:PassRole"
            ],
            "Effect": "Allow",
            "Resource": [
            ]
        }                
     ],
     "Version": "2012-10-17"
    }

  edware-security_pol: >      
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Action": [
            "ec2:AllocateAddress",
            "ec2:AssociateRouteTable",
            "ec2:AuthorizeSecurityGroupEgress",
            "ec2:AuthorizeSecurityGroupIngress",
            "ec2:CreateInternetGateway",
            "ec2:CreateKeyPair",
            "ec2:CreateNetworkAcl",
            "ec2:CreateNetworkAclEntry",
            "ec2:CreateRoute",
            "ec2:CreateRouteTable",
            "ec2:CreateSecurityGroup",
            "ec2:CreateSubnet",
            "ec2:CreateVpc",
            "ec2:DeleteKeyPair",
            "ec2:DeleteNetworkAcl",
            "ec2:DeleteNetworkAclEntry",
            "ec2:DeleteRoute",
            "ec2:DeleteRouteTable",
            "ec2:DeleteSecurityGroup",
            "ec2:DeleteSubnet",
            "ec2:DeleteVpc",
            "ec2:DescribeKeyPairs",
            "ec2:DescribeNetworkAcls",
            "ec2:DescribeNetworkInterfaceAttribute",
            "ec2:DescribeRouteTables",
            "ec2:DescribeSecurityGroups",
            "ec2:DescribeSubnets",
            "ec2:DescribeTags",
            "ec2:DescribeVpcAttribute",
            "ec2:DescribeVpcs",
            "ec2:DisassociateRouteTable",
            "ec2:EnableVgwRoutePropagation",
            "ec2:ImportKeyPair",
            "ec2:ModifySubnetAttribute",
            "ec2:ModifyVpcAttribute",
            "ec2:ReleaseAddress",
            "ec2:ReplaceRoute",
            "ec2:ReplaceRouteTableAssociation",
            "ec2:RevokeSecurityGroupEgress",
            "ec2:RevokeSecurityGroupIngress"
          ],
          "Resource": [
            "*"
          ]
        }, 
        {
          "Effect": "Allow",
          "Action": [
            "iam:AddRoleToInstanceProfile",
            "iam:AddUserToGroup",
            "iam:AttachGroupPolicy",
            "iam:AttachRolePolicy",
            "iam:CreateGroup",
            "iam:CreateInstanceProfile",
            "iam:CreatePolicy",
            "iam:CreateRole",
            "iam:DeleteGroupPolicy",
            "iam:DeleteInstanceProfile",
            "iam:DeletePolicy",
            "iam:DeletePolicyVersion",
            "iam:DeleteRole",
            "iam:DeleteRolePolicy",
            "iam:DeleteUser",
            "iam:DeleteUserPolicy",
            "iam:DetachGroupPolicy",
            "iam:DetachRolePolicy",
            "iam:DetachUserPolicy",
            "iam:GenerateCredentialReport",
            "iam:GetAccountSummary",
            "iam:GetCredentialReport",
            "iam:GetGroup",
            "iam:GetGroupPolicy",
            "iam:GetInstanceProfile",
            "iam:GetLoginProfile",
            "iam:GetPolicy",
            "iam:GetPolicyVersion",
            "iam:GetRole",
            "iam:GetRolePolicy",
            "iam:GetUser",
            "iam:GetUserPolicy",
            "iam:ListAccessKeys",
            "iam:ListAccountAliases",
            "iam:ListAttachedGroupPolicies",
            "iam:ListAttachedRolePolicies",
            "iam:ListAttachedUserPolicies",
            "iam:ListEntitiesForPolicy",
            "iam:ListGroupPolicies",
            "iam:ListGroups",
            "iam:ListGroupsForUser",
            "iam:ListInstanceProfiles",
            "iam:ListInstanceProfilesForRole",
            "iam:ListMFADevices",
            "iam:ListPolicies",
            "iam:ListRolePolicies",
            "iam:ListRoles",
            "iam:ListUserPolicies",
            "iam:ListUsers",
            "iam:PassRole",
            "iam:PutGroupPolicy",
            "iam:PutRolePolicy",
            "iam:PutUserPolicy",
            "iam:RemoveRoleFromInstanceProfile",
            "iam:RemoveUserFromGroup",
            "iam:UpdateGroup",
            "iam:UpdateLoginProfile",
            "iam:UpdateUser"
          ],
          "Resource": [
            "*"
          ]
        }
      ]
    }

# Roles are associated to instance profiles (defined below).
# There should be a 1:1 relationship between roles and instance
# profiles since a profile can have only one role

# In dev/test, these roles have a suffix _role_ENVNAME
# In prod, these policies have suffix _role
iam_roles:
  ansible_role:
    - yum_write_pol
    - gluster_ssl_write_pol
    - apache_ssl_write_pol
    - sensu_ssl_write_pol
  nat_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  bind_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  sensu-rabbit_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  sensu_role:
    - yum_read_pol
    - gluster_ssl_read_pol
    - sensu_ssl_write_pol
    - sensu_ssl_read_pol
  gluster-server_role:
    - yum_read_pol
    - gluster_ssl_write_pol
    - sensu_ssl_read_pol
  loghost_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  memcached_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  hpz-db_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  tsb-db_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  stats-db_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  udl-db_role:
    - yum_read_pol
    - gluster_ssl_read_pol
    - sensu_ssl_read_pol
  migrate-db_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  migrate-rabbit_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  reporting-rabbit-extract_role:
    - yum_read_pol
    - sensu_ssl_read_pol
    - extract_ssl_read_pol
  reporting-rabbit-services_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  tsb-rabbit_role:
    - yum_read_pol
    - sensu_ssl_read_pol
    - tsb_ssl_read_pol
  udl-rabbit_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  db-master_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  lz_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  file-grabber_role:
    - yum_read_pol
    - gluster_ssl_read_pol
    - archive_write_pol
    - sensu_ssl_read_pol
  file-trigger_role:
    - yum_read_pol
    - gluster_ssl_read_pol
    - sensu_ssl_read_pol
  udl_role:
    - yum_read_pol
    - gluster_ssl_read_pol
    - sensu_ssl_read_pol
  db-pgbouncer_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  reporting-db-slave_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  extracts-db-slave_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  reporting-db-pgpool_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  extracts-db-pgpool_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  tsb-worker_role:
    - yum_read_pol
    - sensu_ssl_read_pol
    - gluster_ssl_read_pol
  tsb-web_role:
    - yum_read_pol
    - sensu_ssl_read_pol
    - apache_ssl_read_pol
  tsb-trigger_role:
    - yum_read_pol
    - sensu_ssl_read_pol
    - gluster_ssl_read_pol
  hpz-web_role:
    - yum_read_pol
    - gluster_ssl_read_pol
    - apache_ssl_read_pol
    - sensu_ssl_read_pol
  reporting-worker-extract_role:
    - yum_read_pol
    - gluster_ssl_read_pol
    - sensu_ssl_read_pol
  reporting-worker-pdf_role:
    - yum_read_pol
    - gluster_ssl_read_pol
    - sensu_ssl_read_pol
  reporting-web_role:
    - yum_read_pol
    - apache_ssl_read_pol
    - sensu_ssl_read_pol
  reporting-cache-warmer_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  reporting-generator-pdf_role:
    - yum_read_pol
    - sensu_ssl_read_pol
  base_role:
    - yum_read_pol

