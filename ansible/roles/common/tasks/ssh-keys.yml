
#================================================================#
#                    Developer Accounts
#================================================================#

- name: List all non-root authorized_keys files
  shell: find /home -name authorized_keys | cut -f 3 -d'/'
  register: ak_files
  ignore_errors: yes

- name: Purge authorized_keys for all users except those allowed, when in dev
  file:
    state: absent
    path: /home/{{ item }}/.ssh/authorized_keys
  with_items: "{{ak_files.stdout_lines | difference(users_allowed_to_have_authorized_keys) }}"
  when: "{{ not ec2_tag_environment == 'prod' }}"

- name: Purge authorized_keys for all users except ansible when in prod
  # Important not to delete ansible, or we will fail to reconnect immediately!
  shell: find /home -name authorized_keys | grep -v ansible | xargs --no-run-if-empty rm
  when: "{{ ec2_tag_environment == 'prod' }}"

#================================================================#
#                   Ansible Service Account
#================================================================#

# This is a massive PITA, because we don't have 'exclusive' parameter 
# for authorized_key yet in v1.8

# When in dev, force ansible user to have exactly two keys - prod and dev
# When in prod, force ansible user to have exactly one key - prod

- name: Setup ansible user ssh dir
  file:
    state: directory
    owner: ansible
    mode: '0700'
    path: /home/ansible/.ssh

- name: Read prod ansible key from disk
  sudo: no
  delegate_to: localhost
  shell: cat $(ls ../credentials/ansible-prod-????-??-??.pem.pub | tail -1)
  register: ssh_key_ansible_prod
  changed_when: False

- name: Read dev ansible key from disk
  sudo: no
  delegate_to: localhost
  shell: cat $(ls ../credentials/ansible-dev-????-??-??.pem.pub | tail -1)
  register: ssh_key_ansible_dev
  changed_when: False
  when: "{{ not ec2_tag_environment == 'prod' }}"

- name: Everywhere but prod, write both dev and prod ansible keys
  template:
    mode: 0644
    owner: ansible
    src: ansible-ssh-keys-dev.j2
    dest: /home/ansible/.ssh/authorized_keys
  when: "{{ not ec2_tag_environment == 'prod' }}"

- name: In prod, write only prod ansible keys
  template:
    mode: 0644
    owner: ansible
    src: ansible-ssh-keys-prod.j2
    dest: /home/ansible/.ssh/authorized_keys
  when: "{{ ec2_tag_environment == 'prod' }}"

#================================================================#
#                   Root Account
#================================================================#

- name: Purge authorized_keys for root
  file:
    state: absent
    path: /root/.ssh/authorized_keys

- name: Install root ITOps SSH keys
  authorized_key:
    state: present
    user: root
    key: "{{ lookup('file', '../credentials/' + item + '.pub') }}"
  with_items:
    - sb2_prd_adminkeys
    - Amplify_Insight_ITOps_Default

- name: Install dev keys for root on non-prod
  authorized_key:
    state: present
    user: root
    key: "{{ lookup('file', '../credentials/' + item + '.pub') }}"
  with_items:
    - sb2_dev_adminkeys
  when: "{{ not ec2_tag_environment == 'prod' }}"

#================================================================#
#                   Nessus Service Account
#================================================================#

- name: install nessus key
  authorized_key:
    state: present
    key: "{{ lookup('file', '../credentials/nessus.pub') }}"
    user: nessus








