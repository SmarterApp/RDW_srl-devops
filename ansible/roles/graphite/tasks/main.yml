- name: install graphite and deps
  yum:
    name: "{{ item }}"
    state: present
  with_items: graphite_packages
  tags:
    - slow

- name: Remove rpm-provided wsgi config for graphite
  file:
    path: /etc/httpd/conf.d/graphite-web.conf
    state: absent
  notify: restart_httpd
  
- name: copy django/graphite settings
  template:
    src: local_settings.py.j2
    dest: "{{ graphite_conf }}/local_settings.py"
  notify: restart_httpd

- name: copy initial graphite data
  copy:
    src: graphite-dump.json
    dest: "{{ graphite_python }}/initial_data.json"
  
- name: find state of graphite db
  command:  "python {{ graphite_python }}/manage.py inspectdb"
  register: graphite_db_result
  changed_when: False

- name: prep graphite db, first pass 
  command: "python {{ graphite_python }}/manage.py syncdb --noinput"
  when: graphite_db_result.stdout.find('account_mygraph') == -1

# For terrible unknown reasons, this is needed 
# see http://stackoverflow.com/questions/28909061/django-graphite-integrityerror-column-username-is-not-unique
- name: prep graphite db, second pass 
  command: "python {{ graphite_python }}/manage.py syncdb --noinput"
  when: graphite_db_result.stdout.find('account_mygraph') == -1

- name: load initial data
  command: "python {{ graphite_python }}/manage.py loaddata {{ graphite_python }}/initial_data.json"
  when: graphite_db_result.stdout.find('account_mygraph') == -1

- name: Make sure graphite user can write to db
  file:
    path: "{{ graphite_var }}/graphite.db"
    owner: "{{ graphite_user }}"
    group: "{{ graphite_user }}"
  notify: restart_httpd


#-------------------------------------
# Setup basic HTTP authentication
#-------------------------------------
- name: Check for htpasswd entry
  shell: "grep -q {{graphite_htpasswd_username}} {{ graphite_conf }}/htpasswd"
  register: graphite_htpasswd_check
  changed_when: false
  failed_when: false

- name: Create htpasswd file
  # Note: the -c clobbers the file, forcing it to only have one entry!
  shell: "/usr/bin/htpasswd -b -c -m {{ graphite_conf }}/htpasswd {{ graphite_htpasswd_username }} '{{graphite_htpasswd_password}}'"
  when: graphite_htpasswd_check | failed
  
- name: Set htpasswd file perms
  file:
    path: "{{ graphite_conf }}/htpasswd"
    state: file
    owner: root
    group: apache
    mode: 0640

#-------------------------------------
#  Setup a simple heartbeat file for ELB healthcheck
#-------------------------------------
    
- name: Make dummy heartbeat docroot
  file:
    path: "{{ graphite_var }}/dummy-heartbeat-webroot"
    state: directory
    mode: 0755
    
- name: Write dummy heartbeat index file
  copy:
    src: dummy-heartbeat.html.j2
    dest: "{{ graphite_var }}/dummy-heartbeat-webroot/index.html"
    
# TODO: ELB creation
