[app:main]
auth.idp.metadata = /opt/edware/conf/idp_metadata.xml
auth.oauth2.identity_parser = smarter_common.security.sbac_identity_parser.SbacOauthIdentityParser
auth.oauth2.idp_server_verify_url = {{ sso_oauth_verify_url }} 
auth.policy.cookie_name = edware
auth.policy.hashalg = sha512
auth.policy.http_only = True
auth.policy.secret = {{ auth_policy_secret }}
auth.policy.secure = {{ auth_policy_secure}}
auth.policy.timeout = 1200
auth.saml.identity_parser = smarter_common.security.sbac_identity_parser.SbacIdentityParser
auth.saml.idp_server_login_url = {{ sso_saml_login_url }} 
auth.saml.idp_server_logout_url = {{ sso_saml_logout_url }}
# TODO: this issuer name is different from reporting, it's HPZ specific
auth.saml.issuer_name = {{ sso_saml_issuer_name }}
auth.saml.name_qualifier = {{ sso_saml_name_qualifier }} 
auth.session.timeout = 1200
auth.skip.verify = False
auth.state.secret = {{ auth_state_secret }}
cache.expire = 3600
cache.lock_dir = /tmp/memcache
cache.regions = session
cache.session.expire = 1200
cache.session.url = {{ cache_hosts }}
cache.type = ext:memcached
disable_stack_trace = {{ disable_stack_trace }}
hpz.PATH = /usr/local/bin
hpz.db.pool_size = 20
hpz.db.schema_name = hpz
hpz.db.url = postgresql+psycopg2://{{ hpz_db_username }}:{{ hpz_db_password }}@{{ hpz_db_host }}:5432/hpz
# This is different from hpz_base_url as port number is different
hpz.frs.download_base_url = {{ hpz_download_base_url }}/download
hpz.frs.file_size_limit = 4294967296
hpz.frs.upload_base_path = /opt/edware/hpz/uploads
ldap.base.dn = ou=environment,dc=edwdc,dc=net
pyramid.debug_all = False
pyramid.debug_authorization = False
pyramid.debug_notfound = False
pyramid.debug_routematch = False
pyramid.default_locale_name = en
pyramid.reload_templates = True
use = egg:hpz
[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
[formatters]
keys = generic
[handler_console]
args = (sys.stderr,)
class = StreamHandler
formatter = generic
level = NOTSET
[handler_filelog]
args = ('/tmp/hpz.log','midnight')
class = logging.handlers.TimedRotatingFileHandler
formatter = generic
level = WARN
[handler_syslog]
args = ('/dev/log', handlers.SysLogHandler.LOG_LOCAL1)
class = logging.handlers.SysLogHandler
formatter = generic
level = WARN
[handlers]
keys = syslog
[logger_hpz]
handlers = syslog
level = WARN
qualname = hpz
[logger_root]
handlers = syslog
level = WARN
[loggers]
keys = root, hpz
[server:main]
host = 0.0.0.0
port = 6544
