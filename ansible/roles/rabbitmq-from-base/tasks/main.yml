---

- name: Require rabbitmq_ssl_s3_bucket
  fail:
    msg: "You must provide the 'rabbitmq_ssl_s3_bucket' variable, either via a playbook variable or via the -e option"
  when: rabbitmq_ssl_s3_bucket is not defined

- name: Install RabbitMQ
  yum:
    state: present
    name: "rabbitmq-server-{{ rabbitmq_rpm_version }}"

- name: Create SSL dir
  file: 
    state: directory
    path: /etc/rabbitmq/ssl
    owner: rabbitmq
    mode: 0700

- name: Install SSL Certs
  shell: "/usr/local/bin/aws s3 sync --sse s3://{{ rabbitmq_ssl_s3_bucket }}/rabbitmq /etc/rabbitmq/ssl "
  register: rmq_s3_sync
  changed_when: "rmq_s3_sync.stdout != ''"
  notify:
    - chown ssl certs
    - restart rabbit
    
- name: RabbitMQ config file
  template:
    src: rabbitmq.config.j2
    dest: /etc/rabbitmq/rabbitmq.config
  notify:
    - restart rabbit

- name: RabbitMQ env file
  template:
    src: rabbitmq-env.conf.j2
    dest: /etc/rabbitmq/rabbitmq-env.conf
  notify:
    - restart rabbit

- name: RabbitMQ plugin conf file
  template:
    src: enabled_plugins.j2
    dest: /etc/rabbitmq/enabled_plugins.j2
  notify:
    - restart rabbit

- name: Enable/Start RMQ service
  service:
    name: rabbitmq-server
    enabled: yes
    state: started

- name: Check for guest user
  shell: "rabbitmqctl -q list_users | grep -q guest"
  register: rabbitmq_guest_user_detected
  changed_when: false
  failed_when: false

- name: Delete guest user
  shell: "rabbitmqctl delete_user guest"
  when: rabbitmq_guest_user_detected | success

- name: Require the_password
  fail:
    msg: "You must provide the '{{ the_password }}' variable in the group_vars/$ENV/secrets.yml file"
  when: the_password is not defined

- name: Check for user
  shell: "rabbitmqctl -q list_users | grep -q '{{ the_username }}'"
  register: the_user_detected
  changed_when: false
  failed_when: false

- name: Create user
  shell: "rabbitmqctl add_user '{{ the_username }}' '{{ the_password }}'"
  when: the_user_detected | failed

- name: Set user perms
  shell: "rabbitmqctl set_permissions -p services {{ vhost_name }} '.*' '.*' '.*' "
  when: the_user_detected | failed

- name: Check for vhost
  shell: "rabbitmqctl -q list_vhosts | egrep -q '^{{ vhost_name }}$'"
  register: the_vhost_detected
  changed_when: false
  failed_when: false

- name: Create vhost
  shell: "rabbitmqctl add_vhost '{{ vhost_name }}'"
  when: the_vhost_detected | failed

