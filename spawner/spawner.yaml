---
region: us-east-1

# List the application ("host classes") and properties of them

# Instance types are from https://docs.google.com/a/amplify.com/spreadsheets/d/1KI4Cduq1NdBEtQX2mQMjKqYEDsjixTdUqYt4q8VZwO0/edit#gid=2140568744
# Application names are from https://docs.google.com/a/amplify.com/spreadsheets/d/1vtYyCL50Ii3wHeNDsWYlu-YVjjBSORzZQZOKvnLAgkM/edit#gid=2108299998
# Security group names are from https://docs.google.com/a/amplify.com/spreadsheets/d/1vtYyCL50Ii3wHeNDsWYlu-YVjjBSORzZQZOKvnLAgkM/edit#gid=2108299998

apps:

  # app-name:
  #   ami_app_name: other_thing # Optional.  Use this to override which AMI is used.  Will look for an AMI that has an application:other_thing tag.
  #   security_groups:
  #     - sg-name-01 # Array of SG names
  #     - sg-name-02 # Array of SG names
  #   instance_type: t1.micro # Required
  #   subnet_type: private # One of private, public, or lz.  Defaults to private.

  ansible:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups:
      - srl-default
    instance_type: t1.micro

  base:
    security_groups: []
    instance_type: t1.micro

  db-master:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: r3.2xlarge

  db-pgbouncer:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups:
      # TODO
      - srl-db-pgbouncer
    instance_type: m3.xlarge

  db-pgpool:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups:
      # TODO
      - srl-db-pool
    instance_type: m3.xlarge

  db-slave: # TODO: may be split; there are actually two - one for extraction and one for reporting
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: []  # TODO
    instance_type: r3.2xlarge

  gluster:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: []  # TODO
    instance_type: m3.medium # TODO: verify

  hpz-db:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.2xlarge

  hpz-web:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.xlarge

  loghost:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m1.medium # TODO: verify

  lz:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.xlarge

  memcached:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: r3.2xlarge

  migrate-db:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.2xlarge

  migrate-rabbit:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.2xlarge

  nat:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.medium

  reporting-cache-warmer:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.large

  reporting-generator-pdf:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.large

  reporting-rabbit:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.xlarge

  reporting-rabbit-extract:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.xlarge

  reporting-web:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.xlarge

  reporting-worker-extract:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.2xlarge

  reporting-worker-pdf:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: r3.2xlarge

  tsb-rabbit:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.xlarge

  tsb-trigger:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.large

  tsb-web:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.xlarge

  tsb-worker:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.xlarge

  udl:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.2xlarge

  udl-db:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.2xlarge

  udl-rabbit:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.xlarge

  vpn:
    ami_app_name: base # TODO: remove this when the real AMI is available
    security_groups: [] # TODO
    instance_type: m3.medium

